#!/usr/bin/env bash
# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

env:
  # Set env var TAG_OVERRIDE to override the container images' tag.
  # By default we use Version as the tag.
  - TAG={{ if index .Env "TAG_OVERRIDE"  }}{{ .Env.TAG_OVERRIDE }}{{ else }}'{{ .Version }}'{{ end }}

before:
  hooks:
    - go mod tidy

builds:
  -
    id: cert-rotation
    main: ./cmd/cert-rotation
    binary: cert-rotation
    env:
      - 'CGO_ENABLED=0'
      - 'GO111MODULE=on'
      - 'GOPROXY=https://proxy.golang.org,direct'
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - '-a'
      - '-trimpath'
    ldflags:
      - '-s'
      - '-w'
      - '-X={{ .ModulePath }}/internal/version.Name=cert-rotation'
      - '-X={{ .ModulePath }}/internal/version.Version={{ .Version }}'
      - '-X={{ .ModulePath }}/internal/version.Commit={{ .Commit }}'
      - '-extldflags=-static'
    goos:
      - 'darwin'
      - 'linux'
      - 'windows'
    goarch:
      - 'amd64'
      - 'arm64'

  -
    id: justification
    main: ./cmd/justification
    binary: justification
    env:
      - 'CGO_ENABLED=0'
      - 'GO111MODULE=on'
      - 'GOPROXY=https://proxy.golang.org,direct'
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - '-a'
      - '-trimpath'
    ldflags:
      - '-s'
      - '-w'
      - '-X={{ .ModulePath }}/internal/version.Name=justification'
      - '-X={{ .ModulePath }}/internal/version.Version={{ .Version }}'
      - '-X={{ .ModulePath }}/internal/version.Commit={{ .Commit }}'
      - '-extldflags=-static'
    goos:
      - 'darwin'
      - 'linux'
      - 'windows'
    goarch:
      - 'amd64'
      - 'arm64'

  -
    id: public-key
    main: ./cmd/public-key
    binary: public-key
    env:
      - 'CGO_ENABLED=0'
      - 'GO111MODULE=on'
      - 'GOPROXY=https://proxy.golang.org,direct'
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - '-a'
      - '-trimpath'
    ldflags:
      - '-s'
      - '-w'
      - '-X={{ .ModulePath }}/internal/version.Name=public-key'
      - '-X={{ .ModulePath }}/internal/version.Version={{ .Version }}'
      - '-X={{ .ModulePath }}/internal/version.Commit={{ .Commit }}'
      - '-extldflags=-static'
    goos:
      - 'darwin'
      - 'linux'
      - 'windows'
    goarch:
      - 'amd64'
      - 'arm64'


dockers:
  -
    ids:
    - cert-rotation
    use: 'buildx'
    goos: 'linux'
    goarch: 'amd64'
    image_templates:
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-cert-rotation:{{ .Version }}-amd64'
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-cert-rotation:latest-amd64'
    build_flag_templates:
      - '--build-arg=APP=cert-rotation'
      - '--platform=linux/amd64'
      - '--pull'
      - '--label=org.opencontainers.image.created={{ .CommitTimestamp }}'
      - '--label=org.opencontainers.image.description=Why do you care?'
      - '--label=org.opencontainers.image.licenses=Apache-2.0'
      - '--label=org.opencontainers.image.name=jvs-cert-rotation'
      - '--label=org.opencontainers.image.revision={{ .FullCommit }}'
      - '--label=org.opencontainers.image.source={{ .GitURL }}'
      - '--label=org.opencontainers.image.title=jvs-cert-rotation'
      - '--label=org.opencontainers.image.version={{ .Version }}'
  -
    ids:
    - cert-rotation
    use: 'buildx'
    goos: 'linux'
    goarch: 'arm64'
    image_templates:
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-cert-rotation:{{ .Version }}-arm64'
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-cert-rotation:latest-arm64'
    build_flag_templates:
      - '--build-arg=APP=cert-rotation'
      - '--platform=linux/arm64'
      - '--pull'
      - '--label=org.opencontainers.image.created={{ .CommitTimestamp }}'
      - '--label=org.opencontainers.image.description=Why do you care?'
      - '--label=org.opencontainers.image.licenses=Apache-2.0'
      - '--label=org.opencontainers.image.name=jvs-cert-rotation'
      - '--label=org.opencontainers.image.revision={{ .FullCommit }}'
      - '--label=org.opencontainers.image.source={{ .GitURL }}'
      - '--label=org.opencontainers.image.title=jvs-cert-rotation'
      - '--label=org.opencontainers.image.version={{ .Version }}'

  -
    ids:
    - justification
    use: 'buildx'
    goos: 'linux'
    goarch: 'amd64'
    image_templates:
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-justification:{{ .Version }}-amd64'
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-justification:latest-amd64'
    build_flag_templates:
      - '--build-arg=APP=justification'
      - '--platform=linux/amd64'
      - '--pull'
      - '--label=org.opencontainers.image.created={{ .CommitTimestamp }}'
      - '--label=org.opencontainers.image.description=Why do you care?'
      - '--label=org.opencontainers.image.licenses=Apache-2.0'
      - '--label=org.opencontainers.image.name=jvs-justification'
      - '--label=org.opencontainers.image.revision={{ .FullCommit }}'
      - '--label=org.opencontainers.image.source={{ .GitURL }}'
      - '--label=org.opencontainers.image.title=jvs-justification'
      - '--label=org.opencontainers.image.version={{ .Version }}'
  -
    ids:
    - justification
    use: 'buildx'
    goos: 'linux'
    goarch: 'arm64'
    image_templates:
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-justification:{{ .Version }}-arm64'
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-justification:latest-arm64'
    build_flag_templates:
      - '--build-arg=APP=justification'
      - '--platform=linux/arm64'
      - '--pull'
      - '--label=org.opencontainers.image.created={{ .CommitTimestamp }}'
      - '--label=org.opencontainers.image.description=Why do you care?'
      - '--label=org.opencontainers.image.licenses=Apache-2.0'
      - '--label=org.opencontainers.image.name=jvs-justification'
      - '--label=org.opencontainers.image.revision={{ .FullCommit }}'
      - '--label=org.opencontainers.image.source={{ .GitURL }}'
      - '--label=org.opencontainers.image.title=jvs-justification'
      - '--label=org.opencontainers.image.version={{ .Version }}'

  -
    ids:
    - public-key
    use: 'buildx'
    goos: 'linux'
    goarch: 'amd64'
    image_templates:
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-public-key:{{ .Version }}-amd64'
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-public-key:latest-amd64'
    build_flag_templates:
      - '--build-arg=APP=public-key'
      - '--platform=linux/amd64'
      - '--pull'
      - '--label=org.opencontainers.image.created={{ .CommitTimestamp }}'
      - '--label=org.opencontainers.image.description=Why do you care?'
      - '--label=org.opencontainers.image.licenses=Apache-2.0'
      - '--label=org.opencontainers.image.name=jvs-public-key'
      - '--label=org.opencontainers.image.revision={{ .FullCommit }}'
      - '--label=org.opencontainers.image.source={{ .GitURL }}'
      - '--label=org.opencontainers.image.title=jvs-public-key'
      - '--label=org.opencontainers.image.version={{ .Version }}'
  -
    ids:
    - public-key
    use: 'buildx'
    goos: 'linux'
    goarch: 'arm64'
    image_templates:
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-public-key:{{ .Version }}-arm64'
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-public-key:latest-arm64'
    build_flag_templates:
      - '--build-arg=APP=public-key'
      - '--platform=linux/arm64'
      - '--pull'
      - '--label=org.opencontainers.image.created={{ .CommitTimestamp }}'
      - '--label=org.opencontainers.image.description=Why do you care?'
      - '--label=org.opencontainers.image.licenses=Apache-2.0'
      - '--label=org.opencontainers.image.name=jvs-public-key'
      - '--label=org.opencontainers.image.revision={{ .FullCommit }}'
      - '--label=org.opencontainers.image.source={{ .GitURL }}'
      - '--label=org.opencontainers.image.title=jvs-public-key'
      - '--label=org.opencontainers.image.version={{ .Version }}'


docker_manifests:
  -
    name_template: '{{ .Env.CONTAINER_REGISTRY }}/jvs-cert-rotation:{{ .Version }}'
    image_templates:
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-cert-rotation:{{ .Version }}-amd64'
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-cert-rotation:{{ .Version }}-arm64'
  -
    name_template: '{{ .Env.CONTAINER_REGISTRY }}/jvs-cert-rotation:latest'
    image_templates:
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-cert-rotation:latest-amd64'
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-cert-rotation:latest-arm64'
  -
    name_template: '{{ .Env.CONTAINER_REGISTRY }}/jvs-justification:{{ .Version }}'
    image_templates:
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-justification:{{ .Version }}-amd64'
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-justification:{{ .Version }}-arm64'
  -
    name_template: '{{ .Env.CONTAINER_REGISTRY }}/jvs-justification:latest'
    image_templates:
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-justification:latest-amd64'
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-justification:latest-arm64'
  -
    name_template: '{{ .Env.CONTAINER_REGISTRY }}/jvs-public-key:{{ .Version }}'
    image_templates:
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-public-key:{{ .Version }}-amd64'
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-public-key:{{ .Version }}-arm64'
  -
    name_template: '{{ .Env.CONTAINER_REGISTRY }}/jvs-public-key:latest'
    image_templates:
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-public-key:latest-amd64'
      - '{{ .Env.CONTAINER_REGISTRY }}/jvs-public-key:latest-arm64'


archives:
  - format: 'tar.gz'
    name_template: 'abcxyz_jvs_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
    format_overrides:
      - goos: 'windows'
        format: 'zip'


checksum:
  name_template: 'abcxyz_jvs_{{ .Version }}_SHA512SUMS'
  algorithm: 'sha512'


changelog:
  use: github
  sort: asc

# TODO(#129): Enable checksum sign. Need to set up GPG.
# signs:
#   - artifacts: 'checksum'
#     args:
#       - '--batch'
#       - '--local-user'
#       - '{{ .Env.GPG_FINGERPRINT }}'
#       - '--output'
#       - '${signature}'
#       - '--detach-sign'
#       - '${artifact}'


release:
  draft: false
