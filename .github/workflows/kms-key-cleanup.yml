# Copyright 2023 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


name: 'cleanup'

# When key_id is empty, we cleanup all key's keyversion in the keyring
# and when key_id is provided, we only cleanup keyversion in that specific key.
on:
  workflow_dispatch:
    inputs:
      key_ring_id:
        description: 'id for the keyring'
        required: true
        default: 'jvs-keyring-0666'
      time_span:
        description: 'keys created in past time span'
        default: '1d'
        type: 'string'
  workflow_call:
    inputs:
      key_ring_id:
        description: 'id for the keyring'
        required: true
        default: 'jvs-keyring-0666'
        type: 'string'
      time_span:
        description: 'keys created in past time span'
        default: '1d'
        type: 'string'


env:
  WIF_PROVIDER: 'projects/851681819867/locations/global/workloadIdentityPools/github-automation/providers/jvs-ci-i'
  WIF_SERVICE_ACCOUNT: 'github-automation-bot@gha-jvs-ci-i-31a91c.iam.gserviceaccount.com'
  PROJECT_ID: 'jvs-i-e5'

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  # clean_up will destroy all keyversions of key in the provided keyring
  # that are not in state DESTROY_SCHEDULED or DESTROYED
  clean_up:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab' # ratchet:actions/checkout@v3
      - uses: 'google-github-actions/auth@35b0e87d162680511bf346c299f71c9c5c379033' # ratchet:google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ env.WIF_PROVIDER }}'
          service_account: '${{ env.WIF_SERVICE_ACCOUNT }}'
      - name: 'Destroy all key version in the keyring'
        shell: 'bash'
        run: |-
          KEY=$(gcloud kms keys list \
            --location=global \
            --keyring=${{ inputs.key_ring_id }} \
            --project=${{ env.PROJECT_ID }} \
            --format="value(name)" \
            --filter="createTime >= '-p${{ inputs.time_span }}'")
          for K in $KEYS; do
            echo "Getting active key version from key ${KEY}"
            KEY_VERSIONS=$(gcloud kms keys versions list \
              --location=global \
              --keyring=${{ inputs.key_ring_id }} \
              --key=${K} \
              --project=${{ env.PROJECT_ID }} \
              --filter="state!=DESTROY_SCHEDULED AND state!=DESTROYED" \
              --format="value(name)")
            for VERSION in $KEY_VERSIONS; do
              echo "Deleting ${VERSION}"
              gcloud kms keys versions destroy ${VERSION} --quiet
            done
          done
